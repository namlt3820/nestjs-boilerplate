version: '2'

services:
  postgresql:
    container_name: nest_boilerplate_postgres
    image: 'postgres:latest'
    ports:
      - 5432:5432
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /data/postgres
      POSTGRES_USER: postgres
    volumes:
      - 'postgres_data:/data/postgres'
    networks:
      - app-network
    restart: unless-stopped

  mongodb:
    container_name: nest_boilerplate_mongo
    image: mongo
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=123456
    volumes:
      - 'mongodb_data:/data/db'
    networks:
      - app-network
    restart: unless-stopped

  redis:
    container_name: nest_boilerplate_redis
    image: redis:6.2-alpine
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass redis_123
    volumes:
      - 'redis_data:/data'
    networks:
      - app-network
    restart: unless-stopped

  mosquitto:
    image: eclipse-mosquitto
    container_name: nest_boilerplate_mosquitto
    volumes:
      - ./mosquitto:/mosquitto
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - 1883:1883
      - 9002:9001
    networks:
      - app-network
    restart: unless-stopped

  nats:
    container_name: nest_boilerplate_nats
    image: nats:latest
    ports:
      - '4222:4222' # Default NATS client port
      - '8222:8222' # Monitoring port (optional)
      - '6222:6222' # Cluster port (optional)
    command: ['-js', '--store_dir=/data'] # Enabling JetStream with data storage
    volumes:
      - nats_data:/data
    restart: unless-stopped

  rabbitmq:
    container_name: nest_boilerplate_rabbitmq
    image: rabbitmq:3-management
    ports:
      - '5672:5672' # RabbitMQ default AMQP port
      - '15672:15672' # RabbitMQ Management UI
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: nest_boilerplate_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
    volumes:
      - zookeeper_data:/var/lib/zookeeper
    networks:
      - app-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: nest_boilerplate_kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - app-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  nats_data:
    driver: local
  rabbitmq_data:
    driver: local
  zookeeper_data:
    driver: local

networks:
  app-network:
    driver: bridge
